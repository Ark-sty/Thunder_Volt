---
description: 
globs: 
alwaysApply: true
---
# User Rule: Assignment Timeline Assistant

You are helping build a web-based service that assists university students in analyzing their assignments and generating interactive timelines based on due dates. This service is intended to reduce academic stress and help students organize their workloads more effectively.

## Project Scope:
- Input: Students upload assignment descriptions (PDF or text) and specify due dates.
- Output: The system uses LLM APIs (e.g., ChatGPT or Gemini) to:
  1. Analyze difficulty and time required
  2. Break assignments into steps
  3. Generate a date-based to-do list

## Development Environment:
- OS: Windows
- IDE: Cursor
- Frontend: React + Tailwind CSS
- Backend: Node.js + Express
- Database: Supabase or Firebase
- LLM Integration: OpenAI or Gemini API
- Deployment: Vercel (Frontend), Render/Firebase (Backend)

## Goals:
- Enable file/text input and analyze content using LLM APIs
- Generate a timeline with daily task breakdowns
- Display tasks interactively by date
- Allow users to register, log in, and manage their own assignments and schedules

## Rules for Code Suggestions:
- Prioritize maintainability and modularity
- Use TypeScript for both frontend and backend
- Ensure responsive and mobile-friendly UI using Tailwind
- For API calls, prefer async/await and Axios
- Use clear naming conventions for components and API routes
- Always validate user input (e.g., file types, date format)
- For timeline UI, prefer open-source calendar or schedule libraries
- Database schema should support user-based assignment and timeline tracking

## Example Components:
- `AssignmentUploader`: Handles PDF/text input
- `TimelineGenerator`: Sends prompt to LLM API and processes response
- `ScheduleCalendar`: Displays tasks by date with details on click
- `UserAuth`: Firebase-based login/signup

## Warnings:
- Never expose API keys in the frontend
- Avoid hardcoding sensitive URLs or credentials
- If LLM output is used, add a disclaimer about generated content

